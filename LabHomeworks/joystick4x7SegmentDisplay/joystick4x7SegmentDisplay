// 4x7 segment display pins
const int pinA = 12;
const int pinB = 8;
const int pinC = 5;
const int pinD = 3;
const int pinE = 2;
const int pinF = 11;
const int pinG = 6;
const int pinDP = 4;
const int pinD1 = 7;
const int pinD2 = 9;
const int pinD3 = 10;
const int pinD4 = 13;
int dpState = LOW;
int digitState = LOW;
int displayNo = 0;

// joystick pins
const int pinSW = A2;
const int pinX = A0;
const int pinY = A1;
int swValue;
int xValue = 0;
int yValue = 0;
int swState = LOW;
int lastSwState = LOW;

bool joyMovedX = false;
bool joyMovedY = false;
int digit = 0;
int minXThreshold = 400;
int maxXThreshold = 600;
int minYThreshold = 400;
int maxYThreshold = 600;

unsigned long lastDebounceTime = 0;
unsigned long debounceDelay = 50;
unsigned long previousMillis = 0;

const int segSize = 8;
const int noOfDisplays = 4;
const int noOfDigits = 10;

int segments[segSize] = {
  pinA, pinB, pinC, pinD, pinE, pinF, pinG, pinDP
};

byte digitMatrix[noOfDigits][segSize - 1] = {
// a b c d e f g
{1, 1, 1, 1, 1, 1, 0}, // 0
{0, 1, 1, 0, 0, 0, 0}, // 1
{1, 1, 0, 1, 1, 0, 1}, // 2
{1, 1, 1, 1, 0, 0, 1}, // 3
{0, 1, 1, 0, 0, 1, 1}, // 4
{1, 0, 1, 1, 0, 1, 1}, // 5
{1, 0, 1, 1, 1, 1, 1}, // 6
{1, 1, 1, 0, 0, 0, 0}, // 7
{1, 1, 1, 1, 1, 1, 1}, // 8
{1, 1, 1, 1, 0, 1, 1} // 9
};

int digits[noOfDisplays] = {
  pinD1, pinD2, pinD3, pinD4
}; 

void displayNumber(byte digit, byte decimalPoint) {
  for (int i = 0; i < segSize - 1; i++) {
    digitalWrite(segments[i], digitMatrix[digit][i]);
  }
  // write the decimalPoint to DP pin
  digitalWrite(segments[segSize - 1], decimalPoint);
}

// activate the display no. received as param

int blinkDigit(int num, int digitState) {
  unsigned long currMillis = millis();
  if (currMillis - previousMillis > 500) {
    previousMillis = currMillis;
    if(digitState == LOW) {
      digitState = HIGH;
    }
    else {
      digitState = LOW;
    }
    digitalWrite(digits[num], digitState);
  }
  return digitState;
}

void setup() {
  for (int i = 0; i < segSize - 1; i++) {
    pinMode(segments[i], OUTPUT);
  }
  pinMode(pinSW, INPUT_PULLUP);
  for (int i = 0; i < noOfDisplays; i++) {
    displayNumber(0, dpState);        
    pinMode(digits[i], OUTPUT);  
  }
  Serial.begin(9600);
}

void loop() {
  xValue = analogRead(pinX);
  yValue = analogRead(pinY);

  if (xValue < minXThreshold && joyMovedX == false) {
      if (displayNo > 0) {
          displayNo--;
      } else {
          displayNo = 3;
      }
      joyMovedX = true;
    }
  
  if (xValue > maxXThreshold && joyMovedX == false) {
    if (displayNo < 4) {
      displayNo++;
    }
    else {
      displayNo = 0;
    }
    joyMovedX = true;
  }

  if (xValue >= minXThreshold && xValue <= maxXThreshold) {
    joyMovedX = false;
  }

  swState = digitalRead(pinSW);
  
  if (swState != lastSwState) {
    if (yValue < minYThreshold && joyMovedY == false) {
      if (digit > 0) {
          digit--;
      } else {
          digit = 9;
      }
      joyMovedY = true;
    }
  
    if (yValue > maxYThreshold && joyMovedY == false) {
      if (digit < 9) {
        digit++;
      }
      else {
        digit = 0;
      }
      joyMovedY = true;
    }

    if (yValue >= minYThreshold && yValue <= maxYThreshold) {
      joyMovedY = false;
    }
  }
  
  lastSwState = swState;
  displayNumber(digit, dpState);
  delay(10);
  Serial.println(yValue);
  Serial.println(xValue);
  digitState = blinkDigit(displayNo, digitState);
  digitState = blinkDigit(displayNo, digitState);
}
